
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dhruv Paul
 */
public class Modifyinfo extends javax.swing.JFrame {

    public static String name, uuserid;
    public static char chk;
    /**
     * Creates new form Modifyinfo
     */
    public Modifyinfo() {
        initComponents();
    }
    
     
    public Modifyinfo(char type, String usern, String nm) {
        initComponents();
        uuserid=usern;
        name=nm;
        chk=type;
        UserID.setEditable(false);
        UserID.setText(""+uuserid);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        RequestmodifyinfoL = new javax.swing.JLabel();
        UserIDL = new javax.swing.JLabel();
        CommentsL = new javax.swing.JLabel();
        Commentscroll = new javax.swing.JScrollPane();
        Comments = new javax.swing.JTextArea();
        UserID = new javax.swing.JTextField();
        Requestupdate = new javax.swing.JButton();
        Pendingrequest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Back.setText("<<Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        RequestmodifyinfoL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RequestmodifyinfoL.setText("Request Modify Info");

        UserIDL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UserIDL.setText("Your UserID is");

        CommentsL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CommentsL.setText("Comments");

        Comments.setColumns(20);
        Comments.setRows(5);
        Commentscroll.setViewportView(Comments);

        Requestupdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Requestupdate.setText("Request Update");
        Requestupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestupdateActionPerformed(evt);
            }
        });

        Pendingrequest.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Pendingrequest.setText("Pending Request");
        Pendingrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PendingrequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Pendingrequest)
                        .addGap(18, 18, 18)
                        .addComponent(Requestupdate))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Back)
                        .addGap(55, 55, 55)
                        .addComponent(RequestmodifyinfoL)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CommentsL)
                            .addComponent(UserIDL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Commentscroll, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(UserID))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(RequestmodifyinfoL))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserIDL)
                    .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CommentsL)
                    .addComponent(Commentscroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Requestupdate)
                    .addComponent(Pendingrequest))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        if ( chk=='s' || chk=='S' ) {
            try {
                Student ob= new Student(uuserid, name);
                ob.setVisible(true);
                this.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(Modifyinfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Teacher ob= new Teacher(uuserid, name);
            ob.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_BackActionPerformed

    private void RequestupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestupdateActionPerformed
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            String comm;
            char status;
            comm=Comments.getText();
            ResultSet rs = stat.executeQuery("select status from modifyinfo where loginid='"+uuserid+"'");
            while (rs.next()) {
                status=rs.getString(1).charAt(0);
                if ( status=='P' || status=='p' ) {
                    JOptionPane.showMessageDialog(this,"Your Last Request Is Still In Progress");
                    Comments.setText("");
                    return;
                } else if (status=='C' || status=='c') {
                    JOptionPane.showMessageDialog(this,"In Order To Make A new Request You'll Have to Delete the Old Request First");
                    int dialogButton = JOptionPane.YES_NO_OPTION;
                    int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like To Delete Your Completed Request","Warning",dialogButton);
                    if(dialogResult == JOptionPane.YES_OPTION){
                        stat.executeQuery("delete modifyinfo where loginid='"+uuserid+"'");
                        JOptionPane.showMessageDialog(this,"Deleted");
                        return;                        
                    } else {
                        return;
                    }
                }
            }
            stat.executeQuery("insert into modifyinfo values('"+uuserid+"','"+comm+"','P')");
            JOptionPane.showMessageDialog(this,"Update Request Sent");
            Comments.setText("");
            return;
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Modifyinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RequestupdateActionPerformed

    private void PendingrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PendingrequestActionPerformed
        try {
            Pendingrequests ob=new Pendingrequests(chk,uuserid,name);
            ob.setVisible(true);
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(Modifyinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PendingrequestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modifyinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modifyinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modifyinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modifyinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modifyinfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTextArea Comments;
    private javax.swing.JLabel CommentsL;
    private javax.swing.JScrollPane Commentscroll;
    private javax.swing.JButton Pendingrequest;
    private javax.swing.JLabel RequestmodifyinfoL;
    private javax.swing.JButton Requestupdate;
    private javax.swing.JTextField UserID;
    private javax.swing.JLabel UserIDL;
    // End of variables declaration//GEN-END:variables
}
