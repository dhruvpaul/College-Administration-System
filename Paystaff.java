
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dhruv Paul
 */
public class Paystaff extends javax.swing.JFrame {

    public static char chk;
    public static String name,auserid;
    /**
     * Creates new form Accounts
     */
    public Paystaff() {
        initComponents();
    }

    public Paystaff(char type,String usern, String nm) {
            initComponents();
            chk=type;
            name= nm;
            auserid=usern;
            Separator.setVisible(false);
            Monthly.setVisible(false);
            MonthlyL.setVisible(false);
            Lastpaid.setVisible(false);
            LastpaidL.setVisible(false);
            Pay.setVisible(false);
            Reenter.setEnabled(false);
            Monthly.setEditable(false);
            Lastpaid.setEditable(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        Accounts = new javax.swing.JLabel();
        UserIDL = new javax.swing.JLabel();
        UserID = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        Separator = new javax.swing.JSeparator();
        MonthlyL = new javax.swing.JLabel();
        Monthly = new javax.swing.JTextField();
        LastpaidL = new javax.swing.JLabel();
        Lastpaid = new javax.swing.JTextField();
        Reenter = new javax.swing.JButton();
        Pay = new javax.swing.JButton();
        Text1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Back.setText("<<Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Accounts.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Accounts.setText("Pay Salary");

        UserIDL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UserIDL.setText("UserID");

        UserID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Submit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        MonthlyL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MonthlyL.setText("Monthly");

        Monthly.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        LastpaidL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LastpaidL.setText("Last Paid");

        Lastpaid.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Reenter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Reenter.setText("Re-Enter");
        Reenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReenterActionPerformed(evt);
            }
        });

        Pay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Pay.setText("Pay");
        Pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayActionPerformed(evt);
            }
        });

        Text1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Text1.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Separator)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Back)
                        .addGap(83, 83, 83)
                        .addComponent(Accounts)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(UserIDL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Reenter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MonthlyL)
                            .addComponent(LastpaidL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Monthly)
                            .addComponent(Lastpaid, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Pay)))
                .addGap(47, 47, 47))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(Accounts))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserIDL)
                    .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Submit)
                    .addComponent(Reenter))
                .addGap(18, 18, 18)
                .addComponent(Separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MonthlyL)
                    .addComponent(Monthly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastpaidL)
                    .addComponent(Lastpaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(Pay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
            Accounts ob=new Accounts('a',""+auserid,""+name);
            ob.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_BackActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Calendar cal = Calendar.getInstance();
            String full =cal.getTime().toString();
            String mon="", dd="", yy="",fulldt="";
            char temp= ' ';
            for(int i=4;i<7;i++) {
                temp=full.charAt(i);
                mon += temp;
            }   
            for(int i=8;i<10;i++) {
                temp=full.charAt(i);
                dd += temp;
            }
            for(int i=24;i<=27;i++) {
                temp=full.charAt(i);
                yy += temp;
            }   
            fulldt=dd+"-"+mon+"-"+yy;
            String userid;
            userid=UserID.getText();
            ResultSet rs = stat.executeQuery("select type from login where loginid='"+userid+"'");
            if (rs.next()) {
                char type;
                type=rs.getString(1).charAt(0);
                if (type=='t'||type=='T'||type=='a'||type=='A') {
                    UserID.setEditable(false);
                    Reenter.setEnabled(true);
                    if (userid.equalsIgnoreCase(auserid)) {
                        JOptionPane.showMessageDialog(this,"You Cannot Pay For Youself");
                        return;
                    }
                    rs= stat.executeQuery("select feesorsal from details where loginid='"+userid+"'");
                    if (rs.next()) {
                        Separator.setVisible(true);
                        Monthly.setVisible(true);
                        MonthlyL.setVisible(true);
                        Lastpaid.setVisible(true);
                        LastpaidL.setVisible(true);
                        Monthly.setText(""+rs.getString(1));
                        Pay.setEnabled(true);
                        int sal=0;
                        sal=Integer.parseInt(rs.getString(1));
                        rs= stat.executeQuery("select adate from saldetails where loginid='"+userid+"'");
                        if (rs.next()) {
                            String tempdt=rs.getString(1), tempmon="",m="";
                            char t;
                            for(int i=5;i<=6;i++) {
                                t=tempdt.charAt(i);
                                tempmon += t;
                            }
                            Pay.setVisible(true);
                            if (mon.equalsIgnoreCase("Jan")) {
                                m="01";
                            } else if (mon.equalsIgnoreCase("Feb")) {
                                m="02";
                            } else if (mon.equalsIgnoreCase("Mar")) {
                                m="03";
                            } else if (mon.equalsIgnoreCase("Apr")) {
                                m="04";
                            } else if (mon.equalsIgnoreCase("May")) {
                                m="05";
                            } else if (mon.equalsIgnoreCase("Jun")) {
                                m="06";
                            } else if (mon.equalsIgnoreCase("Jul")) {
                                m="07";
                            } else if (mon.equalsIgnoreCase("Aug")) {
                                m="08";
                            } else if (mon.equalsIgnoreCase("Sep")) {
                                m="09";
                            } else if (mon.equalsIgnoreCase("Oct")) {
                                m="10";
                            } else if (mon.equalsIgnoreCase("Nov")) {
                                m="11";
                            } else if (mon.equalsIgnoreCase("Dec")) {
                                m="12";
                            }
                            if (tempmon.equalsIgnoreCase(m)) {
                                Pay.setEnabled(false);
                            }
                            String temp1=rs.getString(1), last = "",dt = "",y="";
                            mon="";
                            t=' ';
                            for(int i=8;i<=9;i++) {
                            t = temp1.charAt(i);
                            dt += t;
                            }
                            last= last+dt+"-";
                            for(int i=5;i<=6;i++) {
                                t =  temp1.charAt(i);
                                mon += t;
                            }
                            last= last+mon+"-";
                            for(int i=0;i<=3;i++) {
                                t = temp1.charAt(i);
                                y += t;
                            }
                            last= last+y;
                            Lastpaid.setText(""+last);
                            rs=stat.executeQuery("select status from saldetails where loginid='"+userid+"'");
                            char status=' ';
                            if (rs.next()) {
                                status=rs.getString(1).charAt(0);
                            }
                            if ( status=='p'||status=='P') {
                                Pay.setEnabled(false);
                                Text1.setText("Payment Confirmation Awaiting");
                            }
                        } else {
                            Pay.setVisible(true);
                            Lastpaid.setText("N/A");
                            
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this,"Payment Only Available For College Staff");
                }
            } else {
                JOptionPane.showMessageDialog(this,"Invalid UserID");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Paystaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void ReenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReenterActionPerformed
        Text1.setText("");
        UserID.setEditable(true);
        Reenter.setEnabled(false);
        Separator.setVisible(false);
        Monthly.setVisible(false);
        MonthlyL.setVisible(false);
        Lastpaid.setVisible(false);
        LastpaidL.setVisible(false);
        Pay.setVisible(false);
    }//GEN-LAST:event_ReenterActionPerformed

    private void PayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayActionPerformed
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Calendar cal = Calendar.getInstance();
            String full =cal.getTime().toString();
            String mon="", dd="", yy="",fulldt="";
            char temp= ' ';
            for(int i=4;i<7;i++) {
                temp=full.charAt(i);
                mon += temp;
            }   
            for(int i=8;i<10;i++) {
                temp=full.charAt(i);
                dd += temp;
            }
            for(int i=24;i<=27;i++) {
                temp=full.charAt(i);
                yy += temp;
            }   
            fulldt=dd+"-"+mon+"-"+yy;
            String userid;
            userid=UserID.getText();
            stat.executeQuery("insert into salhistory values('"+userid+"','"+fulldt+"')");
            if(Lastpaid.getText().equalsIgnoreCase("N/A")) {
                stat.executeQuery("insert into saldetails values('"+userid+"','"+fulldt+"','P')");
                JOptionPane.showMessageDialog(this,"Payment Initiated \nConfirmation Awating");
                ReenterActionPerformed(evt);
            } else {
                stat.executeQuery("delete from saldetails where loginid='"+userid+"'");
                stat.executeQuery("insert into saldetails values('"+userid+"','"+fulldt+"','P')");
                JOptionPane.showMessageDialog(this,"Payment Initiated \nConfirmation Awating");
                ReenterActionPerformed(evt);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Paystaff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Paystaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paystaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paystaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paystaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paystaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paystaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Accounts;
    private javax.swing.JButton Back;
    private javax.swing.JTextField Lastpaid;
    private javax.swing.JLabel LastpaidL;
    private javax.swing.JTextField Monthly;
    private javax.swing.JLabel MonthlyL;
    private javax.swing.JButton Pay;
    private javax.swing.JButton Reenter;
    private javax.swing.JSeparator Separator;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel Text1;
    private javax.swing.JTextField UserID;
    private javax.swing.JLabel UserIDL;
    // End of variables declaration//GEN-END:variables
}
