
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dhruv Paul
 */
public class Viewassignments extends javax.swing.JFrame {

    public static char chk;
    public static String name,userid;
    /**
     * Creates new form Assignmentcheck
     */
    public Viewassignments() {
        initComponents();
    }

    public Viewassignments(char type, String usern, String nm) {
        try {
            initComponents();
            chk=type;
            name=nm;
            userid=usern;
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            Submit.setVisible(false);
            if(chk=='s'||chk=='S') {
                DefaultTableModel md=(DefaultTableModel)Table.getModel();
                md.setNumRows(0);
                ResultSet rs= stat.executeQuery("select * from assignments where loginid='"+userid+"' and status='P'");
                if(rs.next()) {
                    Submit.setVisible(true);
                } 
                rs =stat.executeQuery("select * from assignments where loginid='"+userid+"' order by adate desc");
                while (rs.next()) {
                    md.addRow(new Object[]{""+name,rs.getString(2),rs.getString(3),rs.getString(4)});
                }
                Separator.setVisible(false);
                UserID.setVisible(false);
                UserIDL.setVisible(false);
                Check.setVisible(false);
            } else {
                Table.setVisible(false);
                Separator.setVisible(false);
                Submit.setVisible(false);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Viewassignments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Scroll = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        AssignmentL = new javax.swing.JLabel();
        UserIDL = new javax.swing.JLabel();
        UserID = new javax.swing.JTextField();
        Check = new javax.swing.JButton();
        Separator = new javax.swing.JSeparator();
        Submit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Assignment", "Status", "Given by"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scroll.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setMinWidth(70);
            Table.getColumnModel().getColumn(1).setMinWidth(250);
            Table.getColumnModel().getColumn(2).setMinWidth(10);
            Table.getColumnModel().getColumn(3).setMinWidth(60);
        }

        Back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Back.setText("<<Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        AssignmentL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AssignmentL.setText("Assignments");

        UserIDL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UserIDL.setText("UserID");

        UserID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Check.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Check.setText("Check");
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });

        Submit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Separator, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Submit))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(UserIDL)
                                .addGap(18, 18, 18)
                                .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Check)
                                .addGap(0, 80, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AssignmentL)
                        .addGap(191, 191, 191))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(AssignmentL))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserIDL)
                    .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Check))
                .addGap(18, 18, 18)
                .addComponent(Separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Submit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            if (chk=='s'||chk=='S') {
                stat.executeQuery("update assignments set status='C' where loginid='"+userid+"' and status='P'");
                JOptionPane.showMessageDialog(this,"Assignment(s) Submitted");
                DefaultTableModel md=(DefaultTableModel)Table.getModel();
                md.setNumRows(0);
                ResultSet rs =stat.executeQuery("select * from assignments where loginid='"+userid+"' order by adate desc");
                while (rs.next()) {
                    md.addRow(new Object[]{""+name,rs.getString(2),rs.getString(3),rs.getString(4)});
                }
                Submit.setVisible(false);
            } else {
                String temp,tname;
                temp=UserID.getText();
                ResultSet rs= stat.executeQuery("select name from login where loginid='"+temp+"'");
                if (rs.next()) {
                    tname=rs.getString(1);
                } else {
                    JOptionPane.showMessageDialog(this,"Invalid UserID");
                    return;
                }
                stat.executeQuery("update assignments set status='A' where loginid='"+temp+"'");
                JOptionPane.showMessageDialog(this,"Assignment(s) Approved");
                DefaultTableModel md=(DefaultTableModel)Table.getModel();
                md.setNumRows(0);
                rs =stat.executeQuery("select * from assignments where loginid='"+temp+"' order by adate desc");
                while (rs.next()) {
                    md.addRow(new Object[]{""+tname,rs.getString(2),rs.getString(3),rs.getString(4)});
                }
                Submit.setVisible(false);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Viewassignments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        if (chk=='s'||chk=='S') {
            try {
                Student ob=new Student(""+userid,""+name);
                this.setVisible(false);
                ob.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Viewassignments.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (chk=='t'||chk=='T') {
            Assignments ob=new Assignments('T',""+name,""+userid);
            ob.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_BackActionPerformed

    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            String username,uname="";
            username=UserID.getText();
            DefaultTableModel md=(DefaultTableModel)Table.getModel();
            md.setNumRows(0);
            ResultSet rs=stat.executeQuery("select name from login where loginid='"+username+"'");
            if (rs.next()) {
                uname=rs.getString(1);
            } else {
                JOptionPane.showMessageDialog(this,"Invalid UserID");
                return;
            }
            rs= stat.executeQuery("select * from assignments where loginid='"+username+"' order by adate desc");
            while (rs.next()) {
                Table.setVisible(true);
                 md.addRow(new Object[]{""+uname,rs.getString(2),rs.getString(3),rs.getString(4)});
            }
            rs= stat.executeQuery("select * from assignments where loginid='"+username+"' and status='C'");
            if(rs.next()) {
                Submit.setText("Approve");
                Submit.setVisible(true);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Viewassignments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viewassignments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viewassignments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viewassignments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewassignments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viewassignments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AssignmentL;
    private javax.swing.JButton Back;
    private javax.swing.JButton Check;
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JSeparator Separator;
    private javax.swing.JButton Submit;
    private javax.swing.JTable Table;
    private javax.swing.JTextField UserID;
    private javax.swing.JLabel UserIDL;
    // End of variables declaration//GEN-END:variables
}
