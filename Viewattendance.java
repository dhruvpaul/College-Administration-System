
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dhruv Paul
 */
public class Viewattendance extends javax.swing.JFrame {

    public static char chk;
    public static String userid, name;
    
    public Viewattendance() {
        initComponents();
    }

    public Viewattendance(char type, String usern, String nm) {
        try {
            initComponents();
            name=nm;
            userid=usern;
            chk=type;
            Show.setVisible(false);
            UserID.setVisible(false);
            UserIDL.setVisible(false);
            if (chk=='a') {
                Show.setVisible(true);
                UserID.setVisible(true);
                UserIDL.setVisible(true);
            }
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            DefaultTableModel md=(DefaultTableModel)Table.getModel();
            md.setNumRows(0);
            if (chk=='a') {
                return;
            }
            ResultSet rs= stat.executeQuery("select count(*) from attendance where loginid='"+userid+"'");
            if(rs.next()) {
                String count=rs.getString(1);
                Dayspresent.setText(""+count);
            } else {
                JOptionPane.showMessageDialog(this,"Invalid UserId");
                return;
            }
            rs = stat.executeQuery("select * from attendance where loginid='"+userid+"' order by adate desc");
            while (rs.next()) {
                String temp=rs.getString(2), last = "",dt = "",mon="",y="";
                char t=' ';
                for(int i=8;i<=9;i++) {
                t = temp.charAt(i);
                dt += t;
                }
                last= last+dt+"-";
                for(int i=5;i<=6;i++) {
                    t =  temp.charAt(i);
                    mon += t;
                }
                last= last+mon+"-";
                for(int i=0;i<=3;i++) {
                    t = temp.charAt(i);
                    y += t;
                }
                last= last+y;
                md.addRow(new Object[]{""+name,""+last});
            }
                
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Viewattendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        Attendance = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        UserIDL = new javax.swing.JLabel();
        UserID = new javax.swing.JTextField();
        Show = new javax.swing.JButton();
        DaysattendedL = new javax.swing.JLabel();
        Dayspresent = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Back.setText("<<Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Attendance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Attendance.setText("Attendance");

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Present Date(s)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        UserIDL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UserIDL.setText("UserID");

        Show.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Show.setText("Show");
        Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowActionPerformed(evt);
            }
        });

        DaysattendedL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DaysattendedL.setText("Total Days Attended");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Back))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(UserIDL)))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Attendance)
                            .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(Show)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(DaysattendedL)
                .addGap(62, 62, 62)
                .addComponent(Dayspresent, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(Attendance))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserIDL)
                    .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Show))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DaysattendedL)
                    .addComponent(Dayspresent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        if(chk=='a') {
            Admin ob=new Admin(""+userid,""+name);
            ob.setVisible(true);
            this.setVisible(false);
        } else if(chk=='t') {
            Teacher ob=new Teacher(""+userid,""+name);
            ob.setVisible(true);
            this.setVisible(false);
        } else if(chk=='s') {
            try {
                Student ob=new Student(""+userid,""+name);
                ob.setVisible(true);
                this.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(Viewattendance.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BackActionPerformed

    private void ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowActionPerformed
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","cam","project");
            Statement stat = con.createStatement();
            DefaultTableModel md=(DefaultTableModel)Table.getModel();
            md.setNumRows(0);
            String inuserid=UserID.getText();
            ResultSet rs = stat.executeQuery("select * from attendance where loginid='"+inuserid+"' order by adate desc");
            if (rs.next()) {
                //If is just to check that userid is valid or not
            } else {
                JOptionPane.showMessageDialog(this,"Invalid UserID");
                Dayspresent.setText("");
                return;
            }
            rs=stat.executeQuery("select name from login where loginid='"+inuserid+"'");
            String pname="";
            if(rs.next()) {
                pname=rs.getString(1);
            }
            rs = stat.executeQuery("select * from attendance where loginid='"+inuserid+"' order by adate desc");
            while (rs.next()) {
                String temp=rs.getString(2), last = "",dt = "",mon="",y="";
                char t=' ';
                for(int i=8;i<=9;i++) {
                t = temp.charAt(i);
                dt += t;
                }
                last= last+dt+"-";
                for(int i=5;i<=6;i++) {
                    t =  temp.charAt(i);
                    mon += t;
                }
                last= last+mon+"-";
                for(int i=0;i<=3;i++) {
                    t = temp.charAt(i);
                    y += t;
                }
                last= last+y;
                md.addRow(new Object[]{""+pname,""+last});
            }
            rs= stat.executeQuery("select count(*) from attendance where loginid='"+inuserid+"'");
            if(rs.next()) {
                String count=rs.getString(1);
                Dayspresent.setText(""+count);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Viewattendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ShowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viewattendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viewattendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viewattendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewattendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viewattendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Attendance;
    private javax.swing.JButton Back;
    private javax.swing.JLabel DaysattendedL;
    private javax.swing.JTextField Dayspresent;
    private javax.swing.JButton Show;
    private javax.swing.JTable Table;
    private javax.swing.JTextField UserID;
    private javax.swing.JLabel UserIDL;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
